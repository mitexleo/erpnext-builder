name: Build and Push ERPNext Custom Image

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 1"

env:
  DOCKER_IMAGE: mitexleo/syserp

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Increment version
        id: version
        run: |
          CURRENT_VERSION=$(cat VERSION)
          echo "Current version: $CURRENT_VERSION"
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_PATCH=$((patch + 1))
          NEW_VERSION="$major.$minor.$NEW_PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo $NEW_VERSION > VERSION

      - name: Base64 encode apps.json
        run: |
          APPS_JSON_BASE64=$(base64 -w 0 apps.json)
          echo "APPS_JSON_BASE64=$APPS_JSON_BASE64" >> $GITHUB_ENV

      - name: Clone frappe_docker
        run: git clone https://github.com/frappe/frappe_docker

      - name: Build Docker Image
        run: |
          cd frappe_docker
          docker build \
            --build-arg=FRAPPE_PATH=https://github.com/frappe/frappe \
            --build-arg=FRAPPE_BRANCH=version-15 \
            --build-arg=APPS_JSON_BASE64=${{ env.APPS_JSON_BASE64 }} \
            --tag=${{ env.DOCKER_IMAGE }}:${{ env.NEW_VERSION }} \
            --tag=${{ env.DOCKER_IMAGE }}:latest \
            --file=images/layered/Containerfile .

      - name: Push Docker Image
        run: |
          docker push ${{ env.DOCKER_IMAGE }}:${{ env.NEW_VERSION }}
          docker push ${{ env.DOCKER_IMAGE }}:latest
